#cloud-config

# debug: true
users:
  - name: kashall
    shell: /bin/bash
    groups: [admin]
    ssh_authorized_keys: [github:kashalls]

install:
  auto: true
  # device: auto
  no-format: true
  reboot: true
  grub_options:
    extra_cmdline: >-
      video=1280x720
  extra-dirs-rootfs: &longhorn [/var/lib/longhorn]

upgrade:
  extra-dirs-rootfs: *longhorn
reset:
  extra-dirs-rootfs: *longhorn

kubevip: { enabled: false }
growpart: { devices: ["/"] }

bundles:
  - targets: [run://quay.io/kairos/community-bundles:flux_latest]

flux:
  # # The actual value is in http://nas.onair/sensitive_configs.yaml
  # env:
  #   GITHUB_TOKEN: secretstuff
  github:
    owner: kashall
    repository: home-cluster
    path: clusters/corpus
    components-extra: image-reflector-controller,image-automation-controller

stages:
  # If a node has /dev/sda, use that. Otherwise use /dev/nvme0n1
  kairos-install.pre.before:
    - if: "[ -e /dev/sda ]"
      name: "Conditionally partition sda"
      commands:
        - |
          parted --script --machine -- /dev/sda mklabel msdos
      layout: &layout
        device:
          path: /dev/sda
        expand_partition:
          size: 0 # All available space
        add_partitions:
          # all sizes bellow are in MB
          - fsLabel: COS_OEM
            size: 64
            pLabel: oem
          - fsLabel: COS_RECOVERY
            size: 8500
            pLabel: recovery
          - fsLabel: COS_STATE
            size: 18000
            pLabel: state
          - fsLabel: COS_PERSISTENT
            pLabel: persistent
            size: 25000
            filesystem: "ext4"
    - if: "[ ! -e /dev/sda ]"
      name: "Conditionally partition nvme0n1"
      commands:
        - |
          parted --script --machine -- /dev/nvme0n1 mklabel msdos
      layout:
        <<: *layout
        device:
          path: /dev/nvme0n1

  after-install-chroot:
    - name: "Add sensitive config values"
      downloads:
        - url: http://nas.onair/sensitive_configs.yaml
          path: /oem/50_sensitive_configs.yaml
    - name: "Add SOPS secret"
      downloads:
        - url: http://nas.onair/sops_secret.yaml
          path: /var/lib/rancher/k3s/server/manifests/sops-secret.yaml

    # These are in this repo
    - name: "Add cluster-specific manifests from GitHub"
      downloads:
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/tigera-operator.yaml
          path: /var/lib/rancher/k3s/server/manifests/tigera-operator.yaml
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/calico-crds.yaml
          path: /var/lib/rancher/k3s/server/manifests/calico-crds.yaml
        - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/clusters/corpus/manifests/flux-system-namespace.yaml
          path: /var/lib/rancher/k3s/server/manifests/flux-system-namespace.yaml

    # -- (only `commands`,`entities` and `files` may have templating)
    - name: "Add control plane or worker config determined by MAC address"
      files:
        - path: /oem/60_k3s_config.yaml
          content: |
            #cloud-config
            {{- $control := false -}}
            {{- $first := false -}}
            {{- $coral := false -}}
            {{/*                   stuntman             crewman             doorman           mastermind          gravemind           hivemind        */}}
            {{- $macs := list "48:4d:7e:e7:6a:27" "48:4d:7e:dd:21:6e" "18:66:da:0b:93:be" "8c:ae:4c:dd:1f:5b" "8c:ae:4c:dd:18:7a" "8c:ae:4c:dd:18:54"  -}}
            {{- range $net := .Values.network -}}
              {{- if has $net.macaddress $macs -}}
                {{- $control = true -}}
              {{- end -}}
              {{- if eq $net.macaddress (first $macs) -}}
                {{- $first = true -}}
              {{ end -}}
              {{- if eq $net.macaddress "48:4d:7e:e7:6a:27" -}}
                {{- $coral = true -}}
              {{ end -}}
            {{- end -}}

            {{/* https://en.bitcoin.it/wiki/Bech32 */}}
            {{- $id := regexReplaceAll "[^qpzry9x8gf2tvdw0s3jn54khce6mua7l]" (randAlpha 32 | lower) "" | trunc 5 -}}

            {{- if $control }}
            hostname: neuron-{{ $id }}
            k3s:
              enabled: true
              args:
                - --disable traefik,servicelb
                - --flannel-backend none
                - --disable-network-policy
                - --service-cidr 172.23.64.0/18
                - --write-kubeconfig-mode 0644
                - --node-label "graphics=dri"
                - --node-taint node-role.kubernetes.io/control-plane=effect:PreferNoSchedule
              {{- if $coral }}
                - --node-label "coral=attached"
              {{- end }}
            {{- if $first }}
            #    - --cluster-init
            #  env: { K3S_URL: "" }
            {{- end }}
            {{- else }}
            hostname: myocite-{{ $id }}
            k3s-agent:
              enabled: true
              args:
                - --node-label "node.longhorn.io/create-default-disk=true"
                - --node-label "longhorn=primary"
                - --node-label "graphics=dri"
              {{- if $coral }}
                - --node-label "coral=attached"
              {{- end }}
            {{- end }}

    - name: "Disable onboard network"
      files:
        - path: /etc/systemd/network/10-disable-onboard.network
          permissions: 0644
          content: |
            [Match]
            Name=enp0*
            [Link]
            Unmanaged=true

  boot:
    # - name: "Add i915 module"
    #   commands:
    #     - modprobe i915 enable_dc=0 enable_guc=3
    # files:
    #   - path: /etc/modules-load.d/i915.conf
    #     permissions: 0644
    #     content: |
    #       options i915 enable_dc=0 enable_guc=3

    - name: "Partition /dev/nvme0n1 if needed"
      if: >-
        [ $(fdisk -lo type /dev/nvme0n1 | tail -n 1) != "Linux" ]
      commands:
        - parted /dev/nvme0n1 --script -a optimal -- mklabel gpt mkpart longhorn ext4 0% 100%

    - name: "Format /dev/nvme0n1p1 if needed"
      if: >-
        [ $(lsblk -no FSTYPE /dev/nvme0n1p1) != "ext4" ]
      commands:
        - mkfs.ext4 -F /dev/nvme0n1p1

    - name: "Mount /dev/nvme0n1p1 under /var/lib/longhorn if it exists (if NVMe is not primary storage)"
      if: >-
        [ -e /dev/nvme0n1p1 ] && [ -e /dev/sda ]
      commands:
        # -- https://github.com/kairos-io/packages/blob/3482fed51f21a2155b60a0aa9ac91b1d839d1029/packages/static/kairos-overlay-files/files/system/oem/00_rootfs_uki.yaml#L43
        - umount /var/lib/longhorn
        - mount -o rw /dev/nvme0n1p1 /var/lib/longhorn

    - name: "Set up various kube environment variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io
