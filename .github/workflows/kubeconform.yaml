---
name: "Kubeconform"

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
    paths:
      - "kubernetes/apps/main/**"
      - "kubernetes/apps/storage/**"
      - "kubernetes/config/**"

env:
  SCHEMA_DIR: /home/runner/crds

jobs:
  kubeconform:
    name: Kubeconform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - "kubernetes/apps/main"
          - "kubernetes/apps/storage"
          - "kubernetes/config"
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@f2acddfb5195534d487896a656232b016a682f3c # v1.9.0
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        shell: bash
        run: brew install kubeconform kustomize

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Extract files from container image
        shell: bash
        run: |
          mkdir -p ${{ env.SCHEMA_DIR }}
          docker run --rm \
              -v ${{ env.SCHEMA_DIR }}:/crds \
              -u $(id -u) \
              --entrypoint /bin/sh \
              ghcr.io/kashalls/kubernetes-schemas:latest \
              -c "cp -r /usr/share/nginx/html/* /crds"

      - name: Run kubeconform
        shell: bash
        run: bash ./.github/scripts/kubeconform.sh ${{ matrix.path }} ${{ env.SCHEMA_DIR }}
