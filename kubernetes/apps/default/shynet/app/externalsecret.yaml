---
# yaml-language-server: $schema=https://kubernetes-schemas.ok8.sh/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: shynet
  namespace: default
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: shynet-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Django settings
        DEBUG: "False"
        ALLOWED_HOSTS: "{{ .ALLOWED_HOSTS }}"
        CSRF_TRUSTED_ORIGINS: "{{ .CSRF_TRUSTED_ORIGINS }}"
        DJANGO_SECRET_KEY: "{{ .DJANGO_SECRET_KEY }}"
        ACCOUNT_SIGNUPS_ENABLED: "{{ .ACCOUNT_SIGNUPS_ENABLED }}"
        TIME_ZONE: "America/Los_Angeles"
        SHOW_SHYNET_VERSION: "False"

        # Redis configuration (if you use the default Kubernetes config, this will work)
        REDIS_CACHE_LOCATION: "redis://redis.database.svc.cluster.local/5"
        #CELERY_BROKER_URL: "redis://redis-headless.database.svc.cluster.local/6"
        CELERY_TASK_ALWAYS_EAGER: "False"
        CELERY_BROKER_TRANSPORT_OPTIONS: "{'master_name': 'redis-master'}"
        CELERY_BROKER_URL: "sentinel://redis-node-0.redis-headless.database.svc.cluster.local:26379/6;sentinel://redis-node-1.redis-headless.database.svc.cluster.local:26379/6;sentinel://redis-node-2.redis-headless.database.svc.cluster.local:26379/6"

        # PostgreSQL settings
        DB_NAME: &dbName shynet
        DB_HOST: &dbHost postgres-rw.database.svc.cluster.local
        DB_USER: &dbUser "{{ .POSTGRES_USER }}"
        DB_PASSWORD: &dbPass "{{ .POSTGRES_PASS }}"

        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbHost
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

        # Email settings
        EMAIL_HOST_USER: ""
        EMAIL_HOST_PASSWORD: ""
        EMAIL_HOST: "smtp-relay.default.svc.cluster.local"
        SERVER_EMAIL: "Shynet <shy@outsideour.casa>"
        EMAIL_PORT: "2525"
  dataFrom:
    - extract:
        key: cloudnative-pg
    - extract:
        key: shynet
