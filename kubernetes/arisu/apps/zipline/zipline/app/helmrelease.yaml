---
# yaml-language-server: $schema=https://kubernetes-schemas.kashall.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app zipline
  namespace: *app
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        name: bjw-s
        kind: HelmRepository
        namespace: flux-system
  values:
    global:
      fullnameOverride: *app
    automountServiceAccountToken: false
    controller:
      type: deployment
      replicas: 1
    image:
      repository: ghcr.io/diced/zipline
      tag: 3.7.0@sha256:6ff84bd03bde7d1f108ed87b3f953027d5dace33e2c8238ca1fbe432a499f723
    env:
      TZ: "${CONFIG_TZ}"
      CORE_SECRET:
        valueFrom:
          secretKeyRef:
            name: zipline-secret
            key: CORE_SECRET
      CORE_DATABASE_URL:
        valueFrom:
          secretKeyRef:
            name: zipline-secret
            key: CORE_DATABASE_URL
      # TODO: 2023-06-03 add OAuth when Authentik support is merged: https://github.com/diced/zipline/discussions/321 and https://github.com/diced/zipline/pull/372/
      DATASOURCE_S3_ACCESS_KEY_ID:
        valueFrom:
          secretKeyRef:
            name: zipline-secret
            key: AWS_ACCESS_KEY_ID
      DATASOURCE_S3_SECRET_ACCESS_KEY:
        valueFrom:
          secretKeyRef:
            name: zipline-secret
            key: AWS_SECRET_ACCESS_KEY
      DATASOURCE_TYPE: "s3"
      DATASOURCE_S3_BUCKET: "zipline-v1"
      DATASOURCE_S3_ENDPOINT: "rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local."
      DATASOURCE_S3_PORT: "6953"
      DATASOURCE_S3_REGION: "us-west-1"
      DATASOURCE_S3_FORCE_S3_PATH: "true" # TODO: 2023-06-03 current in-cluster RGW doesn't use subdomain (VirtualHost) based S3 buckets yet, it uses path-based
      DATASOURCE_S3_USE_SSL: "false"
      CORE_RETURN_HTTPS: "true"
      CORE_HTTPS: "true"
      CORE_HOST: "0.0.0.0"
      CORE_PORT: "3000"
      CORE_COMPRESSION_ENABLED: "true"
      CORE_COMPRESSION_THRESHOLD: "200mb"
      CORE_COMPRESSION_ON_DASHBOARD: "true"
      EXIF_ENABLED: "false"
      EXIF_REMOVE_GPS: "true"
      FEATURES_INVITES: "false"
      FEATURES_INVITES_LENGTH: "16"
      FEATURES_OAUTH_REGISTRATION: "true"
      FEATURES_USER_REGISTRATION: "false"
      FEATURES_HEADLESS: "false"
      RATELIMIT_USER: "5"
      RATELIMIT_ADMIN: "1"
      UPLOADER_DEFAULT_FORMAT: "DATE"
      UPLOADER_ROUTE: &upload "/file"
      UPLOADER_ADMIN_LIMIT: "100gb"
      UPLOADER_USER_LIMIT: "500mb"
      UPLOADER_DISABLED_EXTENSIONS: "ps1,pdf,bat,exe,sh,fish"
      UPLOADER_FORMAT_DATE: "YYYY-MM-DD_HH-mm-ss"
      UPLOADER_DEFAULT_EXPIRATION: ""
      URLS_ROUTE: &shorten "/go"
      URLS_LENGTH: "6"
      WEBSITE_TITLE: "Zipline"
      WEBSITE_SHOW_FILES_PER_USER: "false"
      WEBSITE_EXTERNAL_LINKS: '[{"label":"Powered by Zipline","link":"https://github.com/diced/zipline"}]'
      WEBSITE_SHOW_VERSION: "false"
      WEBSITE_DISABLE_MEDIA_PREVIEW: "false"
    service:
      main:
        ports:
          http:
            port: 3000
    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "100m"
          nginx.ingress.kubernetes.io/custom-http-errors: "400,403,404,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510"
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8, 100.64.0.0/10"
        hosts:
          - host: &host "${APP_DNS_ZIPLINE}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
      external-upload:
        enabled: true
        primary: false
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "border.kashall.dev"
          nginx.ingress.kubernetes.io/proxy-body-size: "100m"
          nginx.ingress.kubernetes.io/custom-http-errors: "400,403,404,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510"
        hosts:
          - host: *host
            paths:
              - path: *upload
                pathType: Prefix
              - path: /view
                pathType: Prefix
              - path: /r
                pathType: Prefix
        tls:
          - hosts:
              - *host
      shorten:
        enabled: true
        primary: false
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "border.ok8.sh"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          nginx.ingress.kubernetes.io/custom-http-errors: "400,403,404,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510"
        hosts:
          - host: &exthost "s.ok8.sh"
            paths:
              - path: *shorten
                pathType: Prefix
        tls:
          - hosts:
              - *exthost
      shorten-rewrite:
        enabled: true
        primary: false
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "border.ok8.sh"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          nginx.ingress.kubernetes.io/custom-http-errors: "400,403,404,405,409,410,411,412,413,414,415,416,417,418,421,425,431,451,500,501,502,503,504,505,506,510"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/rewrite-target: /go/$1
        hosts:
          - host: *exthost
            paths:
              - path: /(.*)
                pathType: Prefix
        tls:
          - hosts:
              - *exthost
    resources:
      requests:
        cpu: 10m
        memory: 128Mi
      limits:
        memory: 1000Mi
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.8@sha256:d8391076d2c6449927a6409c4e72aaa5607c95be51969036f4feeb7c999638ea
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: zipline-pg-superuser
